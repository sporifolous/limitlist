{"version":3,"sources":["utils.ts","components/CurrencyInput/CurrencyInput.tsx","components/ProductListItem/ProductListItem.tsx","components/ProductListItem/ProductListItemSortable.tsx","components/ProductList/ProductListSortableContainer.tsx","components/ProductList/ProductList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["calculateTotal","price","quantity","priceNumber","Number","replace","quantityNumber","toFixed","currencyLabel","value","isNaN","CurrencyInput","props","type","mask","createNumberMask","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","inputMode","ProductListItem","useState","editing","setEditing","item","setItem","total","setTotal","useEffect","updateItem","property","inputs","className","placeholder","name","onChange","e","target","toString","readOnly","disabled","onClick","stopPropagation","onDelete","labels","content","SortableElement","ProductListSortableContainer","SortableContainer","items","map","i","index","ProductListItemSortable","classNames","isSorting","key","id","newItemId","ProductList","newItem","setNewItem","setIsSorting","itemList","setList","list","ls","grandTotal","reduce","a","b","length","filter","pressDelay","onSortStart","onSortEnd","array","from","to","oldIndex","newIndex","startIndex","splice","arrayMoveMutate","slice","helperClass","uuid","App","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66bb9927.chunk.js","sourcesContent":["export const calculateTotal = (price: string, quantity: string) => {\n  if (!price || !quantity) return '';\n\n  const priceNumber = Number(price.replace('$', ''));\n  const quantityNumber = Number(quantity);\n\n  if (!priceNumber || !quantityNumber) return '0';\n\n  return (priceNumber * quantityNumber).toFixed(2);\n};\n\nexport const arrayMoveMutate = (array: Array<any>, from: number, to: number) => {\n\tconst startIndex = to < 0 ? array.length + to : to;\n\tconst item = array.splice(from, 1)[0];\n\tarray.splice(startIndex, 0, item);\n};\n\nexport const arrayMove = (array: Array<any>, from: number, to: number) => {\n\tarray = array.slice();\n\tarrayMoveMutate(array, from, to);\n\treturn array;\n};\n\nexport const currencyLabel = (value: string) =>\n  value && !isNaN(Number(value))\n    ? `$${Number(value).toFixed(2)}`\n    : '';\n","import React, { ChangeEvent } from 'react';\nimport MaskedInput, { MaskedInputProps } from 'react-text-mask';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\ninterface CurrencyInputProps {\n  value: any,\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void,\n}\n\nconst CurrencyInput: React.FC<CurrencyInputProps & MaskedInputProps> = (props) => {\n  // More info here: https://www.nicknish.co/blog/react-currency-input\n  // and https://codesandbox.io/embed/react-currency-input-with-react-text-mask-4es23\n  const currencyMask = {\n    prefix: '$',\n    suffix: '',\n    includeThousandsSeparator: true,\n    thousandsSeparatorSymbol: ',',\n    allowDecimal: true,\n    decimalSymbol: '.',\n    decimalLimit: 2,\n    integerLimit: 7,\n    allowNegative: false,\n    allowLeadingZeroes: false,\n  };\n\n  return (\n    <MaskedInput\n      type=\"text\"\n      mask={createNumberMask(currencyMask)}\n      inputMode=\"decimal\"\n      value={props.value}\n      { ...props }\n    />\n  );\n};\n\nexport default CurrencyInput;\n","import React, { ChangeEvent, MouseEvent, useState, useEffect } from 'react';\nimport CurrencyInput from '../CurrencyInput/CurrencyInput';\nimport './ProductListItem.scss';\nimport { ProductListItemInput } from './types';\nimport { calculateTotal, currencyLabel } from '../../utils';\n\nexport interface ItemProps {\n  value: ProductListItemInput,\n  className: string,\n  editing?: boolean,\n  onChange: (item: ProductListItemInput) => void,\n  onDelete: (item: ProductListItemInput) => void,\n}\n\nconst ProductListItem: React.FC<ItemProps> = (props) => {\n  const [editing, setEditing] = useState(props.editing);\n  const [item, setItem] = useState(props.value as ProductListItemInput);\n  const [total, setTotal] = useState()\n  useEffect(() => {\n    setTotal(calculateTotal(item.price, item.quantity));\n  }, [item]);\n\n  const updateItem = (property: string, value: any) => {\n    setItem({ ...item, [property]: value });\n  };\n\n  const handleNameChange = (e: ChangeEvent<HTMLInputElement>) => {\n    updateItem('name', e.target.value);\n  };\n\n  const handlePriceChange = (e: ChangeEvent<HTMLInputElement>) => {\n    updateItem('price', e.target.value);\n  };\n\n  const handleQuantityChange = (e: ChangeEvent<HTMLInputElement>) => {\n    updateItem('quantity', Number(e.target.value) ? Number(e.target.value).toString() : '0');\n  };\n\n  const handleWrapperClick = () => setEditing(true);\n\n  const handleSaveClick = (e: MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    props.onChange({\n      ...item,\n      price: item.price\n        ? item.price.replace('$', '')\n        : '',\n    });\n    setEditing(false);\n  };\n\n  const handleCancelClick = (e: MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    setItem(props.value);\n    setEditing(false);\n\n    if (props.value.name === ''\n      && props.value.price === ''\n      && props.value.quantity === ''\n    ){\n      props.onDelete(item);\n    }\n  };\n\n  const handleDeleteClick = (e: MouseEvent<HTMLButtonElement>) => {\n    props.onDelete(item);\n  };\n\n  const inputs = (\n    <>\n      <div\n        className=\"field is-grouped\"\n      >\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            className=\"input name\"\n            placeholder=\"Product Name\"\n            value={item.name}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            className=\"input quantity\"\n            placeholder=\"Quantity\"\n            inputMode=\"decimal\"\n            value={item.quantity}\n            onChange={handleQuantityChange}\n          />\n        </div>\n        <div className=\"control\">\n          <CurrencyInput\n            className=\"input price\"\n            placeholder=\"Price\"\n            value={item.price ? item.price : ''}\n            onChange={handlePriceChange}\n          />\n        </div>\n        <div className=\"control\">\n          <CurrencyInput\n            className=\"input is-static\"\n            value={total}\n            readOnly\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"buttons\"\n      >\n        <button\n          className=\"button is-primary\"\n          disabled={!item.name && !item.price && !item.quantity}\n          onClick={handleSaveClick}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-check\"></i>\n          </span>\n          <span>Save</span>\n        </button>\n        <button\n          className=\"button\"\n          onClick={handleCancelClick}\n        >\n          Cancel\n        </button>\n        <button\n          className=\"button is-danger is-outlined is-pulled-right\"\n          onClick={handleDeleteClick}\n        >\n          <span>Delete</span>\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-times\"></i>\n          </span>\n        </button>\n      </div>\n    </>\n  );\n\n  const labels = (\n    <div\n      className=\"columns is-mobile clickable\"\n    >\n      <div className=\"column\">{props.value.name}</div>\n      <div className=\"column is-narrow\">{props.value.quantity}</div>\n      <div className=\"column is-narrow\">{currencyLabel(props.value.price)}</div>\n      <div className=\"column is-narrow\">{currencyLabel(calculateTotal(props.value.price, props.value.quantity))}</div>\n    </div>\n  );\n\n  const content = editing ? inputs : labels;\n\n  return (\n    <div\n      className={props.className}\n      onClick={handleWrapperClick}\n    >\n      {content}\n    </div>\n  );\n}\n\nexport default ProductListItem;\n","import React from 'react';\nimport { SortableElement } from 'react-sortable-hoc';\nimport ProductListItem, { ItemProps } from './ProductListItem';\n\nexport default SortableElement((props: ItemProps) => <ProductListItem {...props} />);\n","import React from 'react';\nimport classNames from 'classnames';\nimport ProductListItemSortable from '../ProductListItem/ProductListItemSortable';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport { ProductListItemInput } from '../ProductListItem/types';\n\nexport interface ProductListSortableContainerProps {\n  items: Array<ProductListItemInput>,\n  newItemId: string,\n  isSorting: boolean,\n  onChange: (item: ProductListItemInput) => void,\n  onDelete: (item: ProductListItemInput) => void,\n};\n\nconst ProductListSortableContainer = SortableContainer((props: ProductListSortableContainerProps) => (\n  <div className=\"list-item\">\n    {props.items.map((i: ProductListItemInput, index) => (\n      <ProductListItemSortable\n        className={classNames('list-item', { 'select-none': props.isSorting })}\n        key={i.id}\n        index={index}\n        value={i}\n        editing={i.id === props.newItemId}\n        onChange={props.onChange}\n        onDelete={props.onDelete}\n      />\n    ))}\n  </div>\n));\n\nexport default ProductListSortableContainer;\n","import React, { MouseEvent, useState, useEffect } from 'react';\nimport uuid from 'uuid';\nimport ls from 'local-storage';\nimport { ProductListItemInput } from '../ProductListItem/types';\nimport { calculateTotal, arrayMove } from '../../utils';\nimport './ProductList.scss';\nimport ProductListSortableContainer from './ProductListSortableContainer';\nimport { SortEndHandler, SortStartHandler } from 'react-sortable-hoc';\n\nconst LS_LIST_KEY = 'itemList';\n\nconst ProductList: React.FC = () => {\n  const [newItem, setNewItem] = useState({} as ProductListItemInput);\n  const [isSorting, setIsSorting] = useState<boolean>(false);\n\n  const [itemList, setList] = useState([] as Array<ProductListItemInput>);\n  // Load the list from storage on load.\n  useEffect(() => {\n    // TODO: create a storage manager instead of using ls directly\n    const list = ls<Array<ProductListItemInput>>(LS_LIST_KEY) as unknown as Array<ProductListItemInput>;\n\n    setList(list);\n  }, []); // Pass empty array to only perform on mount/unmount\n\n  // Update the list in storage whenever it changes.\n  useEffect(() => {\n    ls(LS_LIST_KEY, itemList);\n  }, [itemList]);\n\n  const updateItem = (item: ProductListItemInput) => {\n    setList(itemList.map(i => item.id === i.id\n      ? { ...item }\n      : i));\n  };\n\n  const deleteItem = (item: ProductListItemInput) => {\n    setList(itemList.filter(i => item.id !== i.id));\n  };\n\n  const handleAddClick = (e: MouseEvent<HTMLButtonElement>) => {\n    const newItem = {\n      id: uuid(),\n      name: '',\n      price: '',\n      quantity: '',\n    } as ProductListItemInput;\n\n    setNewItem(newItem);\n\n    setList([\n      ...itemList,\n      newItem,\n    ]);\n  };\n\n  const onSortStart: SortStartHandler = () => {\n    setIsSorting(true);\n  };\n\n  const onSortEnd: SortEndHandler = ({oldIndex, newIndex}) => {\n    setList(arrayMove(itemList, oldIndex, newIndex));\n    setIsSorting(false);\n  };\n\n  const grandTotal = itemList\n    .map(i => Number(calculateTotal(i.price, i.quantity)))\n    .reduce((a, b) => {\n      return a + b;\n    }, 0)\n    .toFixed(2);\n\n  return (\n    <>\n      <div className=\"list\">\n        <div className=\"list-item has-background-white-ter\">\n          <div\n            className=\"has-text-right\"\n          >\n            <div\n              className=\"input is-static is-paddingless\"\n            >\n              ${grandTotal}\n            </div>\n          </div>\n        </div>\n        {\n          itemList.length > 0 &&\n          <ProductListSortableContainer\n            items={itemList}\n            newItemId={newItem.id}\n            onChange={updateItem}\n            onDelete={deleteItem}\n            isSorting={isSorting}\n            pressDelay={200}\n            onSortStart={onSortStart}\n            onSortEnd={onSortEnd}\n            helperClass=\"sorting\"\n          />\n        }\n        {\n          itemList.length < 1 &&\n          (\n            <div className=\"section has-text-centered\">\n              <div>Your list is empty.</div>\n              <span>Add your first item </span>\n              <i className=\"fas fa-arrow-down\"></i>\n            </div>\n          )\n        }\n        <div\n          className=\"list-item\"\n        >\n          <button\n            className=\"button is-small is-fullwidth\"\n            onClick={handleAddClick}\n          >\n            <span className=\"icon\">\n              <i className=\"fas fa-plus\"></i>\n            </span>\n            <span>Add Item</span>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n\n};\n\nexport default ProductList;\n","import React from 'react';\nimport './App.scss';\nimport './components/ProductList/ProductList';\nimport ProductList from './components/ProductList/ProductList';\n\nconst App = () => {\n  return (\n    <>\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <div className=\"navbar-item logo\">\n            Limitlist\n          </div>\n        </div>\n      </nav>\n      <div className=\"section\">\n        <div className=\"container\">\n          <ProductList />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}