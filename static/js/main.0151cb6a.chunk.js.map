{"version":3,"sources":["utils.ts","components/CurrencyInput/CurrencyInput.tsx","components/ProductListItem/ProductListItem.tsx","components/ProductListItem/ProductListItemSortable.tsx","components/ProductList/ProductListSortableContainer.tsx","components/ProductList/ProductList.tsx","components/ProductListManager/ProductListManager.tsx","storage/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["calculateTotal","price","quantity","priceNumber","Number","replace","quantityNumber","toFixed","currencyLabel","value","isNaN","CurrencyInput","props","type","mask","createNumberMask","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","inputMode","ProductListItem","useState","editing","setEditing","item","setItem","total","setTotal","useEffect","updateItem","property","inputs","className","placeholder","name","onChange","e","target","toString","readOnly","disabled","onClick","stopPropagation","undefined","onDelete","labels","content","SortableElement","ProductListSortableContainer","SortableContainer","items","map","i","index","ProductListItemSortable","classNames","isSorting","key","id","editingItemIds","includes","mapItemToInput","mapInputToItem","input","ProductList","setIsSorting","itemList","grandTotal","reduce","a","b","length","deleteItem","pressDelay","onSortStart","onSortEnd","oldIndex","newIndex","moveItem","helperClass","addItem","ProductListManager","setItems","setEditingItemIds","isLoaded","setIsLoaded","onListIdChange","useCallback","async","storage","Lists","find","listId","fetchList","onItemsChange","set","newItem","uuid","ids","filter","from","to","array","startIndex","splice","arrayMoveMutate","slice","childrenWithProps","React","Children","children","child","cloneElement","list","ls","App","role","aria-label","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0151cb6a.chunk.js","sourcesContent":["/*\n * Copyright (C) 2020 Jimmy Hogoboom\n *\n * This file is part of Limitlist.\n *\n * Limitlist is free software: you can redistribute it and/or modify\n * it under the terms of the Affero GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Limitlist is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * Affero GNU General Public License for more details.\n *\n * You should have received a copy of the Affero GNU General Public License\n * along with Limitlist.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nexport const calculateTotal = (price: string, quantity: string) => {\n  if (!price || !quantity) return '';\n\n  const priceNumber = Number(price.replace('$', ''));\n  const quantityNumber = Number(quantity);\n\n  if (!priceNumber || !quantityNumber) return '0';\n\n  return (priceNumber * quantityNumber).toFixed(2);\n};\n\nexport const arrayMoveMutate = (array: any[], from: number, to: number) => {\n\tconst startIndex = to < 0 ? array.length + to : to;\n\tconst item = array.splice(from, 1)[0];\n\tarray.splice(startIndex, 0, item);\n};\n\nexport const arrayMove = (array: any[], from: number, to: number) => {\n\tarray = array.slice();\n\tarrayMoveMutate(array, from, to);\n\treturn array;\n};\n\nexport const currencyLabel = (value: string) =>\n  value && !isNaN(Number(value))\n    ? `$${Number(value).toFixed(2)}`\n    : '';\n","/*\n * Copyright (C) 2020 Jimmy Hogoboom\n *\n * This file is part of Limitlist.\n *\n * Limitlist is free software: you can redistribute it and/or modify\n * it under the terms of the Affero GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Limitlist is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * Affero GNU General Public License for more details.\n *\n * You should have received a copy of the Affero GNU General Public License\n * along with Limitlist.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { ChangeEvent } from 'react';\nimport MaskedInput, { MaskedInputProps } from 'react-text-mask';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\ninterface CurrencyInputProps {\n  value: any,\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void,\n}\n\nconst CurrencyInput: React.FC<CurrencyInputProps & MaskedInputProps> = (props) => {\n  // More info here: https://www.nicknish.co/blog/react-currency-input\n  // and https://codesandbox.io/embed/react-currency-input-with-react-text-mask-4es23\n  const currencyMask = {\n    prefix: '$',\n    suffix: '',\n    includeThousandsSeparator: true,\n    thousandsSeparatorSymbol: ',',\n    allowDecimal: true,\n    decimalSymbol: '.',\n    decimalLimit: 2,\n    integerLimit: 7,\n    allowNegative: false,\n    allowLeadingZeroes: false,\n  };\n\n  return (\n    <MaskedInput\n      type=\"text\"\n      mask={createNumberMask(currencyMask)}\n      inputMode=\"decimal\"\n      value={props.value}\n      { ...props }\n    />\n  );\n};\n\nexport default CurrencyInput;\n","/*\n * Copyright (C) 2020 Jimmy Hogoboom\n *\n * This file is part of Limitlist.\n *\n * Limitlist is free software: you can redistribute it and/or modify\n * it under the terms of the Affero GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Limitlist is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * Affero GNU General Public License for more details.\n *\n * You should have received a copy of the Affero GNU General Public License\n * along with Limitlist.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { ChangeEvent, MouseEvent, useState, useEffect } from 'react';\nimport CurrencyInput from '../CurrencyInput/CurrencyInput';\nimport './ProductListItem.scss';\nimport { ProductListItemInput } from './types';\nimport { calculateTotal, currencyLabel } from '../../utils';\n\nexport interface ItemProps {\n  value: ProductListItemInput,\n  className: string,\n  editing?: boolean,\n  onChange: (item: ProductListItemInput) => void,\n  onDelete: (item: ProductListItemInput) => void,\n}\n\nconst ProductListItem: React.FC<ItemProps> = (props) => {\n  const [editing, setEditing] = useState(props.editing);\n  const [item, setItem] = useState(props.value as ProductListItemInput);\n  const [total, setTotal] = useState()\n  useEffect(() => {\n    setTotal(calculateTotal(item.price, item.quantity));\n  }, [item]);\n\n  const updateItem = (property: string, value: any) => {\n    setItem(item => ({ ...item, [property]: value }));\n  };\n\n  const handleNameChange = (e: ChangeEvent<HTMLInputElement>) => {\n    updateItem('name', e.target.value);\n  };\n\n  const handlePriceChange = (e: ChangeEvent<HTMLInputElement>) => {\n    updateItem('price', e.target.value);\n  };\n\n  const handleQuantityChange = (e: ChangeEvent<HTMLInputElement>) => {\n    updateItem('quantity', Number(e.target.value) ? Number(e.target.value).toString() : '0');\n  };\n\n  const handleWrapperClick = () => setEditing(true);\n\n  const handleSaveClick = (e: MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    props.onChange({\n      ...item,\n      price: item.price\n        ? item.price.replace('$', '')\n        : '',\n    });\n    setEditing(false);\n  };\n\n  const handleCancelClick = (e: MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    setItem(props.value);\n    setEditing(false);\n\n    if (props.value.name === ''\n      && (props.value.price === '' || props.value.price === undefined)\n      && (props.value.quantity === '' || props.value.quantity === undefined)\n    ){\n      props.onDelete(item);\n    }\n  };\n\n  const handleDeleteClick = (e: MouseEvent<HTMLButtonElement>) => {\n    props.onDelete(item);\n  };\n\n  const inputs = (\n    <>\n      <div\n        className=\"field is-grouped\"\n      >\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            className=\"input name\"\n            placeholder=\"Product Name\"\n            value={item.name}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            className=\"input quantity\"\n            placeholder=\"Quantity\"\n            inputMode=\"decimal\"\n            value={item.quantity}\n            onChange={handleQuantityChange}\n          />\n        </div>\n        <div className=\"control\">\n          <CurrencyInput\n            className=\"input price\"\n            placeholder=\"Price\"\n            value={item.price ? item.price : ''}\n            onChange={handlePriceChange}\n          />\n        </div>\n        <div className=\"control\">\n          <CurrencyInput\n            className=\"input total is-static\"\n            value={total}\n            readOnly\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"buttons\"\n      >\n        <button\n          className=\"button is-primary\"\n          disabled={!item.name && !item.price && !item.quantity}\n          onClick={handleSaveClick}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-check\"></i>\n          </span>\n          <span>Save</span>\n        </button>\n        <button\n          className=\"button\"\n          onClick={handleCancelClick}\n        >\n          Cancel\n        </button>\n        <button\n          className=\"button is-danger is-outlined is-pulled-right\"\n          onClick={handleDeleteClick}\n        >\n          <span>Delete</span>\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-times\"></i>\n          </span>\n        </button>\n      </div>\n    </>\n  );\n\n  const labels = (\n    <div\n      className=\"columns is-mobile clickable\"\n    >\n      <div className=\"column\">{props.value.name}</div>\n      <div className=\"column is-narrow\">{props.value.quantity}</div>\n      <div className=\"column is-narrow\">{currencyLabel(props.value.price)}</div>\n      <div className=\"column is-narrow\">{currencyLabel(calculateTotal(props.value.price, props.value.quantity))}</div>\n    </div>\n  );\n\n  const content = editing ? inputs : labels;\n\n  return (\n    <div\n      className={props.className}\n      onClick={handleWrapperClick}\n    >\n      {content}\n    </div>\n  );\n}\n\nexport default ProductListItem;\n","/*\n * Copyright (C) 2020 Jimmy Hogoboom\n *\n * This file is part of Limitlist.\n *\n * Limitlist is free software: you can redistribute it and/or modify\n * it under the terms of the Affero GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Limitlist is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * Affero GNU General Public License for more details.\n *\n * You should have received a copy of the Affero GNU General Public License\n * along with Limitlist.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React from 'react';\nimport { SortableElement } from 'react-sortable-hoc';\nimport ProductListItem, { ItemProps } from './ProductListItem';\n\nexport default SortableElement((props: ItemProps) => <ProductListItem {...props} />);\n","/*\n * Copyright (C) 2020 Jimmy Hogoboom\n *\n * This file is part of Limitlist.\n *\n * Limitlist is free software: you can redistribute it and/or modify\n * it under the terms of the Affero GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Limitlist is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * Affero GNU General Public License for more details.\n *\n * You should have received a copy of the Affero GNU General Public License\n * along with Limitlist.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport ProductListItemSortable from '../ProductListItem/ProductListItemSortable';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport { ProductListItemInput } from '../ProductListItem/types';\n\nexport interface ProductListSortableContainerProps {\n  items: ProductListItemInput[],\n  editingItemIds: string[],\n  isSorting: boolean,\n  onChange: (item: ProductListItemInput) => void,\n  onDelete: (item: ProductListItemInput) => void,\n};\n\nconst ProductListSortableContainer = SortableContainer((props: ProductListSortableContainerProps) => (\n  <div className=\"list-item\">\n    {props.items.map((i: ProductListItemInput, index) => (\n      <ProductListItemSortable\n        className={classNames('list-item', { 'select-none': props.isSorting })}\n        key={i.id}\n        index={index}\n        value={i}\n        editing={props.editingItemIds.includes(i.id)}\n        onChange={props.onChange}\n        onDelete={props.onDelete}\n      />\n    ))}\n  </div>\n));\n\nexport default ProductListSortableContainer;\n","/*\n * Copyright (C) 2020 Jimmy Hogoboom\n *\n * This file is part of Limitlist.\n *\n * Limitlist is free software: you can redistribute it and/or modify\n * it under the terms of the Affero GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Limitlist is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * Affero GNU General Public License for more details.\n *\n * You should have received a copy of the Affero GNU General Public License\n * along with Limitlist.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { useState } from 'react';\nimport { ProductListItemInput } from '../ProductListItem/types';\nimport { calculateTotal } from '../../utils';\nimport './ProductList.scss';\nimport ProductListSortableContainer from './ProductListSortableContainer';\nimport { SortEndHandler, SortStartHandler } from 'react-sortable-hoc';\nimport { IProductListManagedComponentProps } from '../ProductListManager/ProductListManager';\nimport { IProductListItem } from '../../domain/ProductListItem';\n\nconst mapItemToInput = (item: IProductListItem) => ({\n  id: item.id,\n  name: item.name,\n  quantity: item.quantity?.toString(),\n  price: item.price?.toFixed(2),\n}) as ProductListItemInput;\n\nconst mapInputToItem = (input: ProductListItemInput) => ({\n  id: input.id,\n  name: input.name,\n  quantity: input.quantity ? Number(input.quantity) : null,\n  price: input.price ? Number(input.price) : null,\n}) as IProductListItem;\n\nconst ProductList: React.FC<IProductListManagedComponentProps> = (props) => {\n  const [isSorting, setIsSorting] = useState<boolean>(false);\n\n  const onSortStart: SortStartHandler = () => {\n    setIsSorting(true);\n  };\n\n  const onSortEnd: SortEndHandler = ({ oldIndex, newIndex }) => {\n    props.moveItem!(oldIndex, newIndex);\n\n    setIsSorting(false);\n  };\n\n  const itemList = props.items?.map(mapItemToInput) || [];\n\n  const grandTotal = itemList\n    ? itemList\n      .map(i => Number(calculateTotal(i.price, i.quantity)))\n      .reduce((a, b) => {\n        return a + b;\n      }, 0)\n      .toFixed(2)\n    : 0;\n\n  const handleChange = (item: ProductListItemInput) => {\n    props.updateItem!(mapInputToItem(item));\n  };\n\n  const handleDelete = (item: ProductListItemInput) => {\n    props.deleteItem!(mapInputToItem(item));\n  };\n\n  return (\n    <>\n      <div className=\"list\">\n        <div className=\"list-item has-background-white-ter\">\n          <div\n            className=\"has-text-right\"\n          >\n            <div\n              className=\"input is-static is-paddingless\"\n            >\n              ${grandTotal}\n            </div>\n          </div>\n        </div>\n        {\n          itemList.length > 0 &&\n          <ProductListSortableContainer\n            items={itemList}\n            editingItemIds={props.editingItemIds || []}\n            onChange={handleChange}\n            onDelete={handleDelete}\n            isSorting={isSorting}\n            pressDelay={200}\n            onSortStart={onSortStart}\n            onSortEnd={onSortEnd}\n            helperClass=\"sorting\"\n          />\n        }\n        {\n          itemList.length < 1 &&\n          (\n            <div className=\"section has-text-centered\">\n              <div>Your list is empty.</div>\n              <span>Add your first item </span>\n              <i className=\"fas fa-arrow-down\"></i>\n            </div>\n          )\n        }\n        <div\n          className=\"list-item\"\n        >\n          <button\n            className=\"button is-small is-fullwidth\"\n            onClick={props.addItem}\n          >\n            <span className=\"icon\">\n              <i className=\"fas fa-plus\"></i>\n            </span>\n            <span>Add Item</span>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n\n};\n\nexport default ProductList;\n","/*\n * Copyright (C) 2020 Jimmy Hogoboom\n *\n * This file is part of Limitlist.\n *\n * Limitlist is free software: you can redistribute it and/or modify\n * it under the terms of the Affero GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Limitlist is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * Affero GNU General Public License for more details.\n *\n * You should have received a copy of the Affero GNU General Public License\n * along with Limitlist.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React, { PropsWithChildren, ReactNode, ReactElement, useState, useEffect, useCallback } from \"react\";\nimport uuid from 'uuid';\nimport { IStorage } from \"../../storage\";\nimport { IProductListItem } from \"../../domain/ProductListItem\";\nimport { arrayMove } from \"../../utils\";\n\nexport interface IProductListManagerProps {\n  listId: string,\n  storage: IStorage,\n}\n\nexport interface IProductListManagedComponentProps {\n  items?: IProductListItem[],\n  editingItemIds?: string[],\n  addItem?: () => IProductListItem,\n  updateItem?: (item: IProductListItem) => void,\n  deleteItem?: (item: IProductListItem) => void,\n  moveItem?: (oldIndex: number, newIndex: number) => void,\n}\n\nconst ProductListManager: React.FC<PropsWithChildren<IProductListManagerProps>> = (props) => {\n  const [items, setItems] = useState([] as IProductListItem[]);\n  const [editingItemIds, setEditingItemIds] = useState([] as string[]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  // Use callback to only hit storage when listId changes (see below)\n  const onListIdChange = useCallback(() => {\n    const fetchList = async () => {\n      const items = await props.storage.Lists.find(props.listId) || [];\n\n      setItems(items);\n\n      setIsLoaded(true);\n    };\n    fetchList();\n  }, [props.listId, props.storage.Lists]);\n  useEffect(onListIdChange, [props.listId]);\n\n  // Create a callback that updates when any of its dependencies change.\n  // This allows us to avoid updating storage when any prop other than items changes.\n  // When the props update, this only updates the callback. Then the callback can be used\n  // in a useEffect block when different dependencies change (like the items).\n  const onItemsChange = useCallback(() => {\n    // Don't try to update storage until after the list has been first loaded.\n    // Without this, the effect is trigged immediately upon mount, which results in\n    // updating the store with an empty array.\n    if (!isLoaded) return;\n\n    props.storage.Lists.set(props.listId, items);\n  }, [isLoaded, items, props.listId, props.storage.Lists]);\n\n  // Update the list in storage whenever it changes.\n  useEffect(onItemsChange, [items]);\n\n  const addItem = () => {\n    // TODO: Something else should probably be in charge of manufacturing new instances of items\n    const newItem = {\n      id: uuid(),\n      name: '',\n      price: null,\n      quantity: null,\n    } as IProductListItem;\n\n    setItems(items => [\n      ...items,\n      newItem,\n    ]);\n\n    setEditingItemIds((ids) => ([...ids, newItem.id]));\n  };\n\n  const deleteItem = (item: IProductListItem) => {\n    setItems(items => items.filter(i => item.id !== i.id));\n\n    // Remove item from editing ids if it gets deleted to avoid an ever-expanding list of ids.\n    if (editingItemIds.includes(item.id)) {\n      setEditingItemIds(ids => ids.filter(id => id !== item.id));\n    }\n  };\n\n  const updateItem = (item: IProductListItem) => {\n    setItems(items => items.map(i => item.id === i.id\n      ? { ...item }\n      : i));\n\n    // Remove item from editing ids if it gets updated to avoid an ever-expanding list of ids.\n    if (editingItemIds.includes(item.id)) {\n      setEditingItemIds(ids => ids.filter(id => id !== item.id));\n    }\n  };\n\n  const moveItem = (oldIndex: number, newIndex: number) => {\n    setItems(items => arrayMove(items, oldIndex, newIndex));\n  };\n\n  // Create clones of the children with additional props\n  const childrenWithProps = React.Children.map(props.children, (child: ReactNode) =>\n    React.cloneElement(child as ReactElement, { items, editingItemIds, addItem, deleteItem, updateItem, moveItem })\n  );\n  return (\n    <>\n      {childrenWithProps}\n    </>\n  );\n};\n\nexport default ProductListManager;\n","/*\n * Copyright (C) 2020 Jimmy Hogoboom\n *\n * This file is part of Limitlist.\n *\n * Limitlist is free software: you can redistribute it and/or modify\n * it under the terms of the Affero GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Limitlist is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * Affero GNU General Public License for more details.\n *\n * You should have received a copy of the Affero GNU General Public License\n * along with Limitlist.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport ls from 'local-storage';\nimport { IProductListItem } from '../domain/ProductListItem';\n\nexport interface IStorage {\n    Lists: ILists,\n}\n\nexport interface ILists {\n    find: (id: string) => Promise<IProductListItem[]>,\n    set: (id: string, list: IProductListItem[]) => void,\n}\n\nconst Lists = {\n    find: async (id: string) => {\n        const list = ls<IProductListItem[]>(id) as unknown as IProductListItem[];\n        if (!list) return [];\n\n        return list;\n    },\n    set: async (id: string, list: IProductListItem[]) => {\n        ls(id, list);\n    },\n}\n\nexport default {\n    Lists,\n} as IStorage;\n","/*\n * Copyright (C) 2020 Jimmy Hogoboom\n *\n * This file is part of Limitlist.\n *\n * Limitlist is free software: you can redistribute it and/or modify\n * it under the terms of the Affero GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Limitlist is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * Affero GNU General Public License for more details.\n *\n * You should have received a copy of the Affero GNU General Public License\n * along with Limitlist.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport React from 'react';\nimport './App.scss';\nimport './components/ProductList/ProductList';\nimport ProductList from './components/ProductList/ProductList';\nimport ProductListManager from './components/ProductListManager/ProductListManager';\nimport storage from './storage/index';\n\nconst App = () => {\n  return (\n    <>\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <div className=\"navbar-item logo\">\n            Limitlist\n          </div>\n        </div>\n      </nav>\n      <div className=\"section window-view-height\">\n        <div className=\"container\">\n          <ProductListManager\n            listId=\"itemList\"\n            storage={storage}\n          >\n            <ProductList />\n          </ProductListManager>\n        </div>\n      </div>\n      <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n          <a href=\"https://notabug.org/jimmyh/limitlist\">Source</a>\n          <span>\n            &nbsp;Copyright © 2020 Jimmy Hogoboom\n          </span>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}